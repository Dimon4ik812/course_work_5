name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo service postgresql start
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD '852123654';"
          sudo -u postgres psql -c "CREATE DATABASE habits;"  # Изменено на habits
          sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD '852123654';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE habits TO runner;"  # Изменено на habits
          sudo -u postgres psql -c "GRANT CREATE ON SCHEMA public TO runner;"
          echo "DATABASE_URL=postgres://runner:852123654@localhost/habits" >> $GITHUB_ENV  # Изменено на habits

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          fail_on_empty: true

      - name: Run makemigrations
        run: |
          poetry run python manage.py makemigrations

      - name: Run migrate
        run: |
          poetry run python manage.py migrate

      - name: Run tests
        run: |
          poetry run python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
        run: |
          sshpass -p "rBXW2Mn-Bf#,?Z" ssh -v -o StrictHostKeyChecking=no root@85.92.111.109 "set -x; cd /root/-Django-REST-Framework && git pull && ~/.local/bin/poetry install && sudo systemctl restart nginx"